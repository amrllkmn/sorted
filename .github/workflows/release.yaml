name: Wails Build and Release
on:
  push:
    branches: ["main"] # Trigger on push to main branch
    tags:
      - "v*" # Trigger on tags starting with v (e.g., v1.0.0, v1.1.0)
  pull_request:
    branches:
      - "main" # Trigger on pull requests targeting the main branch

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    name: Build and Upload
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
        include:
          - os: ubuntu-22.04
            platform: linux/amd64
            ext: ""
            path: build/bin/sorted
            name: sorted-linux
          - os: windows-latest
            platform: windows/amd64
            ext: ".exe"
            path: build/bin/sorted.exe
            name: sorted-win
          - os: macos-latest
            platform: darwin/universal
            ext: ""
            path: build/bin/sorted.app/Contents/MacOS/sorted
            name: sorted-mac # Fixed path for macOS app bundle
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libgirepository1.0-dev \
            libwebkit2gtk-4.0-dev \
            pkg-config

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Add Go bin to path
        run: echo "${HOME}/go/bin" >> $GITHUB_PATH

      - name: Build app with Wails
        run: wails build -platform ${{ matrix.platform }}

      - name: Create ZIP files for Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path dist -Force
          Compress-Archive -Path ${{ matrix.path }} -DestinationPath .\${{ matrix.name }}.zip

      - name: Create ZIP files for Linux and macOS
        if: runner.os != 'Windows'
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            chmod -R +x ./${{matrix.path}}
            zip ./${{matrix.name}}.zip ./${{matrix.path}}
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            chmod -R +x ./${{matrix.path}}
            zip ./${{matrix.name}}.zip ./${{matrix.path}}
          fi

      - name: Upload binaries
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}.zip
          path: ./${{matrix.name}}.zip

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List artifacts
        run: ls -R ./artifacts

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/sorted-linux.zip/sorted-linux.zip
            ./artifacts/sorted-win.zip/sorted-win.zip
            ./artifacts/sorted-mac.zip/sorted-mac.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
