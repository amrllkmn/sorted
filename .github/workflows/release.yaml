name: Wails Build and Release (Dev Mode)

on:
  push:
    branches: ["*"]
    tags:
      - "v*"
  pull_request:
    branches: [main]

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    name: Build and Upload
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux/amd64
            ext: ""
            path: build/bin/sorted.app/Contents/Linux/sorted
            name: sorted-linux
          - os: windows-latest
            platform: windows/amd64
            ext: ".exe"
            path: build/bin/sorted.exe
            name: sorted-win
          - os: macos-latest
            platform: darwin/universal
            ext: ""
            path: build/bin/sorted.app/Contents/MacOS/sorted
            name: sorted-mac # Fixed path for macOS app bundle
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libgirepository1.0-dev \
            pkg-config

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Add Go bin to path
        run: echo "${HOME}/go/bin" >> $GITHUB_PATH

      - name: Build app with Wails
        run: wails build -platform ${{ matrix.platform }}

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: sorted-${{ matrix.name }}
          path: ${{ matrix.path }} # Corrected for macOS app bundle path

  release:
    name: Create GitHub Release (Dev)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List artifacts
        run: ls -R ./artifacts

      - name: (Skip Release - Just Confirm Artifacts)
        run: echo "Release would happen here. Artifacts downloaded."
